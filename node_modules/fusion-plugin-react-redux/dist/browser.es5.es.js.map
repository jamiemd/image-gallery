{"version":3,"file":"browser.es5.es.js","sources":["../src/ctx-enhancer.js","../src/tokens.js","../src/browser.js","../src/index.js"],"sourcesContent":["/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\n\nimport {createStore} from 'redux';\nimport type {Store} from 'redux';\n\nimport type {Context} from 'fusion-core';\n\ntype CreateStoreType = typeof createStore;\ntype StoreWithContextType = Store<*, *, *> & {ctx: Context};\n\nexport default (ctx?: Context) => (createStore: CreateStoreType) => (\n  ...args: any\n) => {\n  const store: StoreWithContextType = {\n    ...createStore(...args),\n    ctx: ctx,\n  };\n  return store;\n};\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Reducer, StoreEnhancer} from 'redux';\n\nimport {createToken} from 'fusion-core';\nimport type {Token, Context} from 'fusion-core';\n\nimport type {ReactReduxServiceType} from './types.js';\n\ntype InitialStateType<TState> = (ctx: Context) => Promise<TState> | TState;\n\nexport const ReduxToken: Token<ReactReduxServiceType> = createToken(\n  'ReduxToken'\n);\nexport const ReducerToken: Token<Reducer<*, *>> = createToken('ReducerToken');\nexport const PreloadedStateToken: Token<Object> = createToken(\n  'PreloadedStateToken'\n);\nexport const EnhancerToken: Token<StoreEnhancer<*, *, *>> = createToken(\n  'EnhancerToken'\n);\nexport const GetInitialStateToken: Token<\n  InitialStateType<Object>\n> = createToken('GetInitialStateToken');\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/* eslint-env browser */\n/* globals __REDUX_DEVTOOLS_EXTENSION__ */\n\nimport React from 'react';\nimport {Provider} from 'react-redux';\nimport {compose, createStore} from 'redux';\n\nimport {createPlugin, unescape} from 'fusion-core';\nimport type {Context, FusionPlugin} from 'fusion-core';\n\nimport ctxEnhancer from './ctx-enhancer';\nimport {ReducerToken, PreloadedStateToken, EnhancerToken} from './tokens.js';\nimport type {\n  StoreWithContextType,\n  ReactReduxDepsType,\n  ReactReduxServiceType,\n} from './types.js';\n\nconst getPlugin = () => {\n  let storeCache = null;\n  return createPlugin({\n    deps: {\n      reducer: ReducerToken,\n      preloadedState: PreloadedStateToken.optional,\n      enhancer: EnhancerToken.optional,\n    },\n    provides({reducer, preloadedState, enhancer}) {\n      class Redux {\n        store: StoreWithContextType<*, *, *>;\n\n        constructor(ctx) {\n          if (storeCache) {\n            // $FlowFixMe\n            this.store = storeCache;\n          } else {\n            // We only use initialState for client-side hydration\n            // The real initial state should be derived from the reducer and the @@INIT action\n            if (!preloadedState) {\n              const stateElement = document.getElementById('__REDUX_STATE__');\n              if (stateElement) {\n                preloadedState = JSON.parse(unescape(stateElement.textContent));\n              }\n            }\n            const devTool =\n              __DEV__ &&\n              window.__REDUX_DEVTOOLS_EXTENSION__ &&\n              // $FlowFixMe\n              __REDUX_DEVTOOLS_EXTENSION__();\n            const enhancers = [enhancer, ctxEnhancer(ctx), devTool].filter(\n              Boolean\n            );\n            // $FlowFixMe\n            this.store = createStore(\n              reducer,\n              preloadedState,\n              // $FlowFixMe\n              compose(...enhancers)\n            );\n            storeCache = this.store;\n          }\n        }\n      }\n      return {\n        from: (ctx?: Context) => {\n          return new Redux(ctx);\n        },\n      };\n    },\n    middleware(_, redux) {\n      return (ctx, next) => {\n        const {store} = redux.from(ctx);\n        ctx.element = <Provider store={store}>{ctx.element}</Provider>;\n        return next();\n      };\n    },\n  });\n};\n\nexport default ((getPlugin: any): () => FusionPlugin<\n  ReactReduxDepsType,\n  ReactReduxServiceType\n>);\n","/** Copyright (c) 2018 Uber Technologies, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport browserPlugin from './browser';\nimport serverPlugin from './server';\n\nexport default (__NODE__ ? serverPlugin : browserPlugin());\n\nexport {\n  ReduxToken,\n  ReducerToken,\n  PreloadedStateToken,\n  EnhancerToken,\n  GetInitialStateToken,\n} from './tokens';\n"],"names":["ctx","createStore","store","ReduxToken","createToken","ReducerToken","PreloadedStateToken","EnhancerToken","GetInitialStateToken","getPlugin","storeCache","createPlugin","deps","reducer","preloadedState","optional","enhancer","provides","Redux","stateElement","document","getElementById","JSON","parse","unescape","textContent","devTool","window","__REDUX_DEVTOOLS_EXTENSION__","enhancers","ctxEnhancer","filter","Boolean","compose","from","middleware","_","redux","next","element","browserPlugin"],"mappings":";;;;;;;;;;;;;;;;;;AAUA,AAQA,mBAAe,UAACA,GAAD;SAAmB,UAACC,cAAD;WAAkC,YAE/D;UACGC,KAA2B,qBAC5BD,cAAW,MAAX,mBAD4B;QAE/BD,GAAG,EAAEA;QAFP;;aAIOE,KAAP;KAPgC;GAAnB;CAAf;;AClBA;;;;;;;AAUA,AAOO,IAAMC,UAAwC,GAAGC,WAAW,CACjE,YADiE,CAA5D;AAGP,AAAO,IAAMC,YAAkC,GAAGD,WAAW,CAAC,cAAD,CAAtD;AACP,AAAO,IAAME,mBAAkC,GAAGF,WAAW,CAC3D,qBAD2D,CAAtD;AAGP,AAAO,IAAMG,aAA4C,GAAGH,WAAW,CACrE,eADqE,CAAhE;AAGP,AAAO,IAAMI,oBAEZ,GAAGJ,WAAW,CAAC,sBAAD,CAFR;;AC3BP;;;;;;;;;;;AAWA,AAeA,IAAMK,SAAS,GAAG,SAAZA,SAAY,GAAM;MAClBC,UAAU,GAAG,IAAjB;SACOC,YAAY,CAAC;IAClBC,IAAI,EAAE;MACJC,OAAO,EAAER,YADL;MAEJS,cAAc,EAAER,mBAAmB,CAACS,QAFhC;MAGJC,QAAQ,EAAET,aAAa,CAACQ;KAJR;IAMlBE,QANkB,0BAM4B;UAApCJ,OAAoC,QAApCA,OAAoC;UAA3BC,cAA2B,QAA3BA,cAA2B;UAAXE,QAAW,QAAXA,QAAW;;UACtCE,KADsC,GAI1C,eAAYlB,GAAZ,EAAiB;YACXU,UAAJ,EAAgB;;eAETR,KAAL,GAAaQ,UAAb;SAFF,MAGO;;;cAGD,CAACI,cAAL,EAAqB;gBACbK,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAArB;;gBACIF,YAAJ,EAAkB;cAChBL,cAAc,GAAGQ,IAAI,CAACC,KAAL,CAAWC,QAAQ,CAACL,YAAY,CAACM,WAAd,CAAnB,CAAjB;;;;cAGEC,OAAO,GACX,yCACAC,MAAM,CAACC,4BADP;UAGAA,4BAA4B,EAJ9B;;cAKMC,SAAS,GAAG,CAACb,QAAD,EAAWc,WAAW,CAAC9B,GAAD,CAAtB,EAA6B0B,OAA7B,EAAsCK,MAAtC,CAChBC,OADgB,CAAlB,CAdK;;eAkBA9B,KAAL,GAAaD,WAAW,CACtBY,OADsB,EAEtBC,cAFsB;UAItBmB,OAAO,MAAP,SAAWJ,SAAX,CAJsB,CAAxB;UAMAnB,UAAU,GAAG,KAAKR,KAAlB;;OAhCsC;;aAoCrC;QACLgC,IAAI,EAAE,cAAClC,GAAD,EAAmB;iBAChB,IAAIkB,KAAJ,CAAUlB,GAAV,CAAP;;OAFJ;KA1CgB;IAgDlBmC,UAhDkB,sBAgDPC,CAhDO,EAgDJC,KAhDI,EAgDG;aACZ,UAACrC,GAAD,EAAMsC,IAAN,EAAe;0BACJD,KAAK,CAACH,IAAN,CAAWlC,GAAX,CADI;YACbE,KADa,eACbA,KADa;;QAEpBF,GAAG,CAACuC,OAAJ,GAAc,oBAAC,QAAD;UAAU,KAAK,EAAErC;WAAQF,GAAG,CAACuC,OAA7B,CAAd;eACOD,IAAI,EAAX;OAHF;;GAjDe,CAAnB;CAFF;;;;;;;;;;;;;;AC1BA;;;;;;;AAQA,AAGA,YAA0CE,SAAa,EAAvD;;;;;"}