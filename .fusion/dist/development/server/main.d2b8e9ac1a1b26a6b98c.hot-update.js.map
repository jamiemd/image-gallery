{"version":3,"file":"main.d2b8e9ac1a1b26a6b98c.hot-update.js","sources":["/Users/jamie/GitHub/image-gallery/src/Components/add-image.js","/Users/jamie/GitHub/image-gallery/src/pages/album.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addImage } from \"../actions/albums\";\n\nclass AddImage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: \"\",\n      imagePreviewUrl: \"\"\n    };\n  }\n\n  handleUpload = event => {\n    console.log(\"event.target.files\", event.target.files);\n\n    let reader = new FileReader();\n    let file = event.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file.name,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const image = {\n      file: this.state.file,\n      imagePreviewUrl: this.state.imagePreviewUrl\n    };\n    this.props.addImage(image, this.props.albumId);\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"file\"\n            accept=\".jpg, .jpeg, .png\"\n            onChange={e => this.handleUpload(e)}\n          />\n          <button>Save</button>\n        </form>\n        <div className=\"example__images-container\">\n          <div className=\"example__images\">{}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  { addImage }\n)(AddImage);\n","// @flow\nimport React, { Component } from \"react\";\nimport { styled } from \"fusion-plugin-styletron-react\";\nimport { findAlbum } from \"../actions/albums\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Link } from \"fusion-plugin-react-router\";\nimport AddImage from \"../Components/add-image\";\n\nclass Album extends Component {\n  componentDidMount() {\n    const albumId = this.props.match.params.id;\n    this.props.findAlbum(albumId);\n  }\n\n  render() {\n    return (\n      <div style={albumContainer}>\n        <Link style={homeLink} to=\"/\">\n          Home\n        </Link>\n        <div>{this.props.album.name}</div>\n        <AddImage albumId={this.props.match.params.id} />\n        <div style={imagesContainer}>\n          {this.props.album.images.map((image, i) => (\n            <img style={imageContainer} src={image.imagePreviewUrl} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst albumContainer = {\n  fontFamily: \"HelveticaNeue-Light, Arial\",\n  width: \"80%\",\n  display: \"flex\",\n  justifyContent: \"center\"\n};\n\nconst homeLink = {\n  textDecoration: \"none\"\n};\n\nconst imagesContainer = {\n  // margin: \"5px\",\n  // display: \"grid\",\n  // gridTemplateColumns: \"repeat(6, 200px)\",\n  // justifyContent: \"center\"\n};\n\nconst bg = {\n  backgroundColor: \"white\",\n  margin: \"20px\"\n};\n\nconst imageContainer = {\n  maxWidth: \"300px\",\n  maxHeight: \"300px\"\n};\n\nconst mapStateToProps = state => {\n  return {\n    album: state.album || { images: [] }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { findAlbum }\n)(Album);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAvBA;AAyBA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AA9BA;AACA;AACA;AAFA;AAIA;AACA;AA0BA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AAHA;AAOA;AAAA;AACA;AAAA;AAIA;AACA;AAnDA;AACA;AAoDA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AAtBA;AACA;AAuBA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AADA;AAIA;AAEA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAEA;AAAA;;;;A","sourceRoot":""}